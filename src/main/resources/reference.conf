
# My custom journal plugin
scuttlebutt-journal {
  # Class name of the plugin.
  class = "org.openlaw.scuttlebutt.persistence.ScuttlebuttAsyncWriteJournal"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka.actor.default-dispatcher"

  # This event adapter reads a JSON value from the scuttlebutt persisted event using the class
  # provided in the manifest. This can be ovenridden with a custom event adapter if more fine
  # grained behaviour is required
  event-adapters {
    default-json-payload = "org.openlaw.scuttlebutt.persistence.serialization.DefaultEventAdapter"
  }

  event-adapter-bindings {
    "com.fasterxml.jackson.databind.JsonNode" = default-json-payload
  }

  secret {
    path: null
  }

  host : "localhost"
  port : 8008
  networkKey : "1KHLiKZvAvjbY1ziZEHMXawbCEIM6qwjCDm3VYRan/s="
}

org.openlaw.scuttlebutt.journal.persistence {
  class = "org.openlaw.scuttlebutt.persistence.ScuttlebuttReadJournalProvider"

  # How often to check for newly persisted messages from akka journal queries
  refresh-interval: 1s,

  # How many events to fetch in one query (replay) and keep buffered until they
  # are delivered downstreams.

  max-buffer-size: 100,

  secret {
    path: null
  }

  host : "localhost"
  port : 8008
  networkKey : "1KHLiKZvAvjbY1ziZEHMXawbCEIM6qwjCDm3VYRan/s="
}